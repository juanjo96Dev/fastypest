name: Pull Request tests

on:
  pull_request:
    branches: ["main"]
env:
  NODE_VERSION: "16.x"
  DB_USER: root
  DB_PASSWORD: password
  DB_NAME: test

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run build
        run: npm run build

  check-eslint:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run eslint
        run: npm run eslint

  run-test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    strategy:
      fail-fast: false
      matrix:
        image:
          [
            "mysql",
            "postgress",
            "mariadb",
            "cockroachdb",
            "oracle",
            "mssql",
            "sqlite",
          ]

    services:
      data-base:
        image: ${{matrix.image}}

    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run test
        env:
          DATABASE_TYPE: ${{ matrix.image }}
        run: npm run test
