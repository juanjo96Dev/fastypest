name: Pull Request tests

on:
  pull_request:
    branches: ["main"]
env:
  NODE_VERSION: "16.x"
  env_var:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run build
        run: npm run build

  check-eslint:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run eslint
        run: npm run eslint

  run-test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    strategy:
      fail-fast: false
      matrix:
        image: ["mysql"]

    services:
      data-base:
        image: ${{matrix.image}}
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run test
        env:
          DATABASE_TYPE: ${{ matrix.image }}
        run: npm run test
