name: Pull Request tests

on:
  pull_request:
    branches: ["main"]
env:
  NODE_VERSION: "16.x"
  DB_USER: root
  DB_PASSWORD: password
  DB_NAME: test

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run build
        run: npm run build

  check-eslint:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run eslint
        run: npm run eslint

  run-test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    strategy:
      fail-fast: false
      matrix:
        image:
          [
            "postgres:latest",
            "cockroachdb/cockroach:v19.2.4",
            "mariadb/server:10.4.13-bionic",
            "mysql/mysql-server:latest",
            "oracle/database-instantclient:19.3.0.0.0-1",
            "mcr.microsoft.com/mssql/server:2019-CU4-ubuntu-18.04",
            "mcr.microsoft.com/sqlite/sqlite3",
          ]

    services:
      data-base:
        image: ${{matrix.image}}
        env:
          MYSQL_ROOT_PASSWORD: ${{env.DB_PASSWORD}}
          MYSQL_USER: ${{env.DB_USER}}
          MYSQL_PASSWORD: ${{env.DB_PASSWORD}}
          MYSQL_DATABASE: ${{env.DB_NAME}}
          POSTGRES_USER: ${{env.DB_USER}}
          POSTGRES_PASSWORD: ${{env.DB_PASSWORD}}
          POSTGRES_DB: ${{env.DB_NAME}}
          COCKROACH_USER: ${{env.DB_USER}}
          COCKROACH_PASSWORD: ${{env.DB_PASSWORD}}
          COCKROACH_DATABASE: ${{env.DB_NAME}}
          MARIADB_ROOT_PASSWORD: ${{env.DB_PASSWORD}}
          MARIADB_USER: ${{env.DB_USER}}
          MARIADB_PASSWORD: ${{env.DB_PASSWORD}}
          MARIADB_DATABASE: ${{env.DB_NAME}}
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{env.DB_PASSWORD}}
          MSSQL_PID: Developer
          ORACLE_ALLOW_REMOTE: true
          ORACLE_HOME: /opt/oracle/product/19c/dbhome_1
          ORACLE_SID: XE
          ORACLE_PWD: ${{env.DB_PASSWORD}}
          ORACLE_CHARACTERSET: AL32UTF8

    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run test
        env:
          databaseImageMap: '{"postgres:latest":"postgres","cockroachdb/cockroach:v19.2.4":"cockroachdb","mariadb/server:10.4.13-bionic":"mariadb","mysql/mysql-server:latest":"mysql","oracle/database-instantclient:19.3.0.0.0-1":"oracle","mcr.microsoft.com/mssql/server:2019-CU4-ubuntu-18.04":"mssql","mcr.microsoft.com/sqlite/sqlite3":"sqlite"}'
          DATABASE_TYPE: ${{ env.databaseImageMap[matrix.image]}}
        run: npm run test
