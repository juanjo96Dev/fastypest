name: Pull Request tests

on:
  pull_request:
    branches: ["main"]
env:
  NODE_VERSION: "16.x"
  env_var:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run build
        run: npm run build

  check-eslint:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run eslint
        run: npm run eslint

  run-test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    strategy:
      fail-fast: false
      matrix:
        image: ["mysql", "postgress", "mariadb"]

    services:
      data-base:
        image: ${{matrix.image}}
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: root
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
          COCKROACH_USER: root
          COCKROACH_PASSWORD: password
          COCKROACH_DATABASE: test
          MARIADB_ROOT_PASSWORD: password
          MARIADB_USER: root
          MARIADB_PASSWORD: password
          MARIADB_DATABASE: test
          ACCEPT_EULA: Y
          SA_PASSWORD: password
          MSSQL_PID: Developer
          ORACLE_ALLOW_REMOTE: true
          ORACLE_HOME: /opt/oracle/product/19c/dbhome_1
          ORACLE_SID: XE
          ORACLE_PWD: password
          ORACLE_CHARACTERSET: AL32UTF8

    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run test
        env:
          DATABASE_TYPE: ${{ matrix.image }}
        run: npm run test
