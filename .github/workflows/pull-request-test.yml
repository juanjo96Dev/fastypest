name: Pull Request tests

on:
  pull_request:
    branches: ["main"]
env:
  NODE_VERSION: "16.x"
  DB_USER: root
  DB_PASSWORD: password
  DB_NAME: test

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run build
        run: npm run build

  check-eslint:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run eslint
        run: npm run eslint

  run-test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build
    strategy:
      fail-fast: false
      matrix:
        image:
          [
            "mysql",
            "postgress",
            "mariadb",
            "cockroachdb",
            "oracle",
            "mssql",
            "sqlite",
          ]

    services:
      data-base:
        image: ${{lookup(images_map, matrix.image)}}
        options: ${{lookup(options_map, matrix.image)}}

    options_map:
      postgress: "-e POSTGRES_USER=${{env.DB_USER}} -e POSTGRES_PASSWORD=${{env.DB_PASSWORD}} -e POSTGRES_DB=${{env.DB_NAME}} -p 5432:5432"
      mysql: "-e MYSQL_ROOT_PASSWORD=${{env.DB_PASSWORD}} -e MYSQL_USER=${{env.DB_USER}} -e MYSQL_PASSWORD=${{env.DB_PASSWORD}} -e MYSQL_DATABASE=${{env.DB_NAME}} -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -p 3306:3306"
      mssql: "-e ACCEPT_EULA=Y -e SA_PASSWORD=${{env.DB_PASSWORD}} -p 1433:1433"
    images_map:
      postgress: "postgres:latest"
      cockroachdb: "cockroachdb/cockroach:v19.2.4"
      mariadb: "mariadb/server:10.4.13-bionic"
      mysql: "mysql/mysql-server:latest"
      oracle: "oracle/database-instantclient:19.3.0.0.0-1"
      mssql: "mcr.microsoft.com/mssql/server:2019-CU4-ubuntu-18.04"
      sqlite: "mcr.microsoft.com/sqlite/sqlite3"

    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci

      - name: Run test
        env:
          DATABASE_TYPE: ${{ matrix.image }}
        run: npm run test
